package com.symphony.ds.malware;

import com.symphony.bdk.core.auth.AuthSession;
import com.symphony.bdk.core.client.ApiClientFactory;
import com.symphony.bdk.core.extension.BdkApiClientFactoryAware;
import com.symphony.bdk.core.extension.BdkAuthenticationAware;
import com.symphony.bdk.extension.BdkExtension;
import com.symphony.bdk.extension.BdkExtensionServiceProvider;

public class MalwareExtension implements BdkExtension,
    BdkExtensionServiceProvider<MalwareService>,
    BdkApiClientFactoryAware,
    BdkAuthenticationAware
{
    private MalwareService service;
    private ApiClientFactory apiClientFactory;
    private AuthSession authSession;

    @Override
    public MalwareService getService() {
        if (service == null) {
            service = new MalwareService(apiClientFactory, authSession);
        }
        return service;
    }

    @Override
    public void setApiClientFactory(ApiClientFactory apiClientFactory) {
        this.apiClientFactory = apiClientFactory;
    }

    @Override
    public void setAuthSession(AuthSession authSession) {
        this.authSession = authSession;
    }
}
